<!DOCTYPE html>
<html>
<head>
    <title>Dashboard</title>
    <style>
        body {
            font-family: 'Arial', sans-serif;
            max-width: 800px;
            margin: 0 auto;
            padding: 10px;
            background-color: #fafafa;
        }

        h1 {
            color: #333;
        }

        #logout {
            display: inline-block;
            padding: 10px;
            background-color: #1a73e8;
            color: #fff;
            text-decoration: none;
            margin-bottom: 20px;
            float: right;
        }

        table,form {
            background-color: #fff;
            box-shadow: 1px 1px 15px rgba(0,0,0,0.1);
            border-radius: 4px;
            padding: 20px;
        }

        .form-group {
            display: grid;
            grid-template-columns: 1fr 5fr;
            gap: 10px;
            align-items: center;
            margin-bottom: 15px;
        }

        .form-group label {
            justify-self: start;
            align-self: center;
        }

        .form-group input[type="text"],
        .form-group textarea,
        .form-group input[type="checkbox"] {
            justify-self: start;
            align-self: center;
        }

        .form-group input[type="text"],
        .form-group textarea {
            width: 100%;
        }

        .form-group textarea {
            min-height: 240px;
            height: 100%;
            resize: vertical;
        }

        th, td {
            padding: 15px;
            border: 1px solid #ddd;
            text-align: left;
        }

        input[type="submit"] {
            background-color: #1a73e8;
            color: #fff;
            border: none;
            padding: 10px 20px;
            cursor: pointer;
            border-radius: 4px;
        }

        input[type="submit"]:hover {
            background-color: #0046c3;
        }
    </style>
    <script src="https://unpkg.com/vue@3/dist/vue.global.js"></script>
</head>
<body>
<div id="app">
    <h1>Welcome, {{ session['user'] }}!</h1>
    <a id="logout" href="/logout">Logout</a>
    <table>
        <thead>
        <tr>
            <th>Session User</th>
            <th>Session CSRF</th>
        </tr>
        </thead>
        <tbody>
        <tr>
            <td>{{ session['user'] }}</td>
            <td>{{ session['csrf'] }}</td>
        </tr>
        </tbody>
    </table>

    <h2>SAML Info:</h2>
    <form id="settingsForm" @submit.prevent="updateSettings">
        <h3>SP Info</h3>
        <div class="form-group">
            <label for="sspEntityID">SP Entity ID</label>
            <input type="text" id="sspEntityID" v-model="samlSettings.sp.entityId">
        </div>

        <div class="form-group">
            <label for="acsURL">ACS URL</label>
            <input type="text" id="acsURL" v-model="samlSettings.sp.assertionConsumerService.url">
        </div>

        <h3>IdP Info</h3>
        <div class="form-group">
            <label for="ssoURL">SSO URL</label>
            <input type="text" id="ssoURL" v-model="samlSettings.idp.singleSignOnService.url">
        </div>

        <div class="form-group">
            <label for="x509cert">x509 cert</label>
            <textarea id="x509cert" v-model="samlSettings.idp.x509cert"></textarea>
        </div>

        <div class="form-group">
            <label for="libDebug">debug</label>
            <input type="checkbox" id="libDebug" v-model="samlSettings.debug">
        </div>

        <div class="form-group">
            <label for="libStrict">strict mode</label>
            <input type="checkbox" id="libStrict" v-model="samlSettings.strict">
        </div>

        <input type="submit" value="Update Settings">
    </form>
</div>

<script>
    const { createApp, ref } = Vue;

    createApp({
        setup() {
            const samlSettings = ref({
                sp: { entityId: '', assertionConsumerService: { url: '' } },
                idp: { entityId: '', singleSignOnService: { url: '' }, x509cert: '' },
                debug: false,
                strict: false
            });

            function fetchSamlSettings() {
                fetch('/get-saml')
                    .then(response => response.json())
                    .then(data => {
                        samlSettings.value = data;
                    });
            }

            function updateSettings() {
                fetch('/set-saml', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify(samlSettings.value)
                });
            }

            fetchSamlSettings();

            return { samlSettings, updateSettings };
        }
    }).mount('#app');
</script>
</body>
</html>